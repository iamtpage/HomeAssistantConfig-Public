 - alias: "Dataplicity Watchdog"
   initial_state: 'off'
   trigger:
     platform: time
     minutes: '/2'
     seconds: 00
   condition:
     condition: or
     conditions:
       - condition: template
         value_template: >
           {% if states('sensor.dataplicity') %}
             {% if is_state('sensor.dataplicity', 'off') %}
               true
             {% endif %}
           {% endif %}
       - condition: template
         value_template: >
           {% if states('sensor.supervisor_service') %}
             {% if is_state('sensor.supervisor_service', 'failed') %}
               true
             {% endif %}
           {% endif %}
   action:
     - service: notify.telegram
       data:
         message: "Dataplicity tunnel is broken"
     - service: shell_command.restart_dataplicity
     - service: automation.turn_off
       entity_id: automation.dataplicity_watchdog
     - delay:
         minutes: 1
     - service: automation.turn_on
       entity_id: automation.dataplicity_watchdog
